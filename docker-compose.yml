version: '3.7'

services:

  postgres:
    restart: "unless-stopped"
    image: "postgres"
    ports: 
      - '5432:5432'
    networks:
      - app_net
    env_file:
      - .env

  redis:
    restart: "unless-stopped"
    image: "redis"
    networks:
      - app_net
    env_file:
      - .env

  api:
    restart: "unless-stopped"
    build:
      context: ./
      dockerfile: ./build/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    networks:
      - app_net
    env_file:
      - .env
    command: gunicorn --bind 0.0.0.0:${APIPORT:-8000} --workers=${WORKERS:-5} server:app

  rqworker:
    restart: "unless-stopped"
    build:
      context: ./
      dockerfile: ./build/Dockerfile
    depends_on:
      - redis
      - postgres
    networks:
      - app_net
    env_file:
      - .env
    command: rq worker --url=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB} high default low 
  
  parser: 
    restart: "unless-stopped"
    build:
      context: ./
      dockerfile: ./build/Dockerfile
    depends_on:
      - redis
      - postgres
    networks:
      - app_net
    env_file:
      - .env
    command: python parser.py && rqscheduler --host ${REDIS_HOST} --port ${REDIS_PORT} --db ${REDIS_DB}

networks:
  app_net:
    driver: "bridge"